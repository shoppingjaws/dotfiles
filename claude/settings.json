{
  "env": {
    "AWS_REGION": "ap-northeast-1"
  },
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Bash(safe_find:*)",
      "Bash(git_root)",
      "Bash(diff:*)",
      "Bash(echo:*)",
      "Bash(rg:*)",
      "Bash(cd:*)",
      "Bash(grep:*)",
      "Read(~/.zshrc)",
      "WebFetch(*)",
      "Fetch(*)",
      "Bash(gh workflow view:*)",
      "Bash(gh workflow list:*)",
      "Bash(ls:*)",
      "Bash(cp:*)",
      "Bash(mkdir:*)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git pull:*)",
      "Bash(gh run view:*)",
      "Bash(gh run list:*)",
      "Bash(gh run watch:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh variable:*)",
      "Bash(gh secret list:*)",
      "Bash(gh project view:*)",
      "Bash(gh project list:*)",
      "Bash(gh pr edit:*)",
      "Bash(terraform plan:*)",
      "Bash(terraform state list:*)",
      "Bash(terraform version:*)",
      "Bash(terraform init:*)",
      "Bash(kustomize build:*)",
      "Bash(kubectl get:*)",
      "Bash(kubectl describe:*)",
      "List(*)",
      "Edit(*)",
      "Read(*)",
      "mcp__aws-documentation__recommend",
      "mcp__aws-documentation__read_documentation",
      "mcp__aws-documentation__search_documentation",
      "mcp__terraform__getProviderDocs",
      "mcp__terraform__moduleDetails",
      "mcp__terraform__policyDetails",
      "mcp__terraform__resolveProviderDocID",
      "mcp__terraform__searchModules",
      "mcp__terraform__searchPolicies"
    ],
    "deny": [
      "Bash(find:*)",
      "Bash(curl:*)",
      "Bash(rm -rf /)",
      "Bash(rm -rf ~)",
      "Bash(rm -rf /*)",
      "Bash(sudo rm:*)",
      "Bash(sudo dd:*)",
      "Bash(sudo mkfs:*)",
      "Bash(sudo fdisk:*)",
      "Bash(sudo mount:*)",
      "Bash(sudo umount:*)",
      "Bash(dd:*)",
      "Bash(mkfs:*)",
      "Bash(fdisk:*)",
      "Bash(> /dev/*)",
      "Bash(>> /dev/*)",
      "Bash(sudo:*passwd*)",
      "Bash(sudo:*shadow*)",
      "Bash(chmod 777 /*)",
      "Bash(chown root:*)",
      "Bash(sudo chmod 777:*)",
      "Bash(sudo chown:*)",
      "Bash(sudo -i:*)",
      "Bash(sudo su:*)",
      "Bash(curl * | sh)",
      "Bash(curl * | bash)",
      "Bash(wget * | sh)",
      "Bash(wget * | bash)",
      "Bash(rm -rf .git)",
      "Bash(git push --force-with-lease origin main)",
      "Bash(git push -f origin main)",
      "Bash(docker system prune -af)",
      "Bash(npm publish:*)",
      "Bash(cargo publish:*)",
      "Bash(deno publish:*)",
      "Edit(/etc/**)",
      "Edit(/usr/**)",
      "Edit(/var/**)",
      "Edit(/opt/**)",
      "Edit(/bin/**)",
      "Edit(/sbin/**)",
      "Edit(/lib/**)",
      "Edit(/lib64/**)",
      "Edit(/boot/**)",
      "Edit(/proc/**)",
      "Edit(/sys/**)",
      "Edit(/dev/**)",
      "Edit(~/.ssh/id_*)",
      "Edit(~/.ssh/*_rsa)",
      "Edit(~/.ssh/*_ecdsa)",
      "Edit(~/.ssh/*_ed25519)",
      "Edit(/etc/passwd)",
      "Edit(/etc/shadow)",
      "Edit(/etc/sudoers)",
      "Write(/etc/**)",
      "Write(/usr/**)",
      "Write(/var/**)",
      "Write(/opt/**)",
      "Write(/bin/**)",
      "Write(/sbin/**)",
      "Write(/lib/**)",
      "Write(/lib64/**)",
      "Write(/boot/**)",
      "Write(/proc/**)",
      "Write(/sys/**)",
      "Write(/dev/**)",
      "Write(~/.ssh/id_*)",
      "Write(~/.ssh/*_rsa)",
      "Write(~/.ssh/*_ecdsa)",
      "Write(~/.ssh/*_ed25519)",
      "Write(/etc/passwd)",
      "Write(/etc/shadow)",
      "Write(/etc/sudoers)"
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "ccusage statusline"
  }
}